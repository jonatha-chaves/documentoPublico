
package com.idip.alfresco34;

import java.util.List;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import com.idip.util.FileAndFolderResult;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "public", targetNamespace = "http://ws.com.br/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Public {


    /**
     * 
     * @param token
     * @param aspectValues
     * @param aspectKeys
     * @param aspectDomain
     * @param name
     * @param data
     * @param aspectName
     * @param newSpace
     * @param password
     * @param user
     * @param folderSequenceTree
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "uploadFileWithAspectFromByte", targetNamespace = "http://ws.com.br/", className = "br.com.ws.UploadFileWithAspectFromByte")
    @ResponseWrapper(localName = "uploadFileWithAspectFromByteResponse", targetNamespace = "http://ws.com.br/", className = "br.com.ws.UploadFileWithAspectFromByteResponse")
    public String uploadFileWithAspectFromByte(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "folderSequenceTree", targetNamespace = "")
        String folderSequenceTree,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "aspectName", targetNamespace = "")
        String aspectName,
        @WebParam(name = "aspectDomain", targetNamespace = "")
        String aspectDomain,
        @WebParam(name = "aspectKeys", targetNamespace = "")
        String aspectKeys,
        @WebParam(name = "aspectValues", targetNamespace = "")
        String aspectValues,
        @WebParam(name = "data", targetNamespace = "")
        byte[] data,
        @WebParam(name = "newSpace", targetNamespace = "")
        boolean newSpace,
        @WebParam(name = "user", targetNamespace = "")
        String user,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param folder
     * @param listExtesionBlock
     * @param token
     * @param file
     * @param password
     * @param user
     * @param folderSequenceTree
     * @return
     *     returns java.util.List<br.com.ws.FileAndFolderResult>
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findFilesAndFolder", targetNamespace = "http://ws.com.br/", className = "br.com.ws.FindFilesAndFolder")
    @ResponseWrapper(localName = "findFilesAndFolderResponse", targetNamespace = "http://ws.com.br/", className = "br.com.ws.FindFilesAndFolderResponse")
    public List<FileAndFolderResult> findFilesAndFolder(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "folderSequenceTree", targetNamespace = "")
        String folderSequenceTree,
        @WebParam(name = "listExtesionBlock", targetNamespace = "")
        String listExtesionBlock,
        @WebParam(name = "file", targetNamespace = "")
        boolean file,
        @WebParam(name = "folder", targetNamespace = "")
        boolean folder,
        @WebParam(name = "user", targetNamespace = "")
        String user,
        @WebParam(name = "password", targetNamespace = "")
        String password)
        throws Exception_Exception
    ;

    /**
     * 
     * @param token
     * @param textConstens
     * @param password
     * @param user
     * @param folderSequenceTree
     * @return
     *     returns java.util.List<br.com.ws.FileAndFolderResult>
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findFilesFullText", targetNamespace = "http://ws.com.br/", className = "br.com.ws.FindFilesFullText")
    @ResponseWrapper(localName = "findFilesFullTextResponse", targetNamespace = "http://ws.com.br/", className = "br.com.ws.FindFilesFullTextResponse")
    public List<FileAndFolderResult> findFilesFullText(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "folderSequenceTree", targetNamespace = "")
        String folderSequenceTree,
        @WebParam(name = "textConstens", targetNamespace = "")
        String textConstens,
        @WebParam(name = "user", targetNamespace = "")
        String user,
        @WebParam(name = "password", targetNamespace = "")
        String password)
        throws Exception_Exception
    ;

    /**
     * 
     * @param token
     * @param name
     * @param data
     * @param newSpace
     * @param password
     * @param user
     * @param folderSequenceTree
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "uploadFileFromByte", targetNamespace = "http://ws.com.br/", className = "br.com.ws.UploadFileFromByte")
    @ResponseWrapper(localName = "uploadFileFromByteResponse", targetNamespace = "http://ws.com.br/", className = "br.com.ws.UploadFileFromByteResponse")
    public String uploadFileFromByte(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "folderSequenceTree", targetNamespace = "")
        String folderSequenceTree,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "data", targetNamespace = "")
        byte[] data,
        @WebParam(name = "newSpace", targetNamespace = "")
        boolean newSpace,
        @WebParam(name = "user", targetNamespace = "")
        String user,
        @WebParam(name = "password", targetNamespace = "")
        String password);

}

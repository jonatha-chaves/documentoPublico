package com.idip.alfresco34;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "OnlinePublicAlfrescoService", targetNamespace = "http://ws.com.br/", wsdlLocation = "http://www2.sefaz.ce.gov.br/AlfrescoWS-ejb/public?wsdl")
public class OnlinePublicAlfrescoService
        extends Service {

    private final static URL ONLINEPUBLICALFRESCOSERVICE_WSDL_LOCATION;
    private final static WebServiceException ONLINEPUBLICALFRESCOSERVICE_EXCEPTION;
    private final static QName ONLINEPUBLICALFRESCOSERVICE_QNAME = new QName("http://ws.com.br/", "OnlinePublicAlfrescoService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://www2.sefaz.ce.gov.br/AlfrescoWS-ejb/public?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ONLINEPUBLICALFRESCOSERVICE_WSDL_LOCATION = url;
        ONLINEPUBLICALFRESCOSERVICE_EXCEPTION = e;
    }

    public OnlinePublicAlfrescoService() {
        super(__getWsdlLocation(), ONLINEPUBLICALFRESCOSERVICE_QNAME);
    }

    public OnlinePublicAlfrescoService(URL wsdlLocation) {
        super(wsdlLocation, ONLINEPUBLICALFRESCOSERVICE_QNAME);
    }

    public OnlinePublicAlfrescoService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /**
     *
     * @return returns Public
     */
    @WebEndpoint(name = "publicPort")
    public Public getPublicPort() {
        return super.getPort(new QName("http://ws.com.br/", "publicPort"), Public.class);
    }

    /**
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
     * configure on the proxy. Supported features not in the
     * <code>features</code> parameter will have their default values.
     * @return returns Public
     */
    @WebEndpoint(name = "publicPort")
    public Public getPublicPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.com.br/", "publicPort"), Public.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ONLINEPUBLICALFRESCOSERVICE_EXCEPTION != null) {
            throw ONLINEPUBLICALFRESCOSERVICE_EXCEPTION;
        }
        return ONLINEPUBLICALFRESCOSERVICE_WSDL_LOCATION;
    }
}

package br.com.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2018-09-20T01:59:47.758-03:00
 * Generated source version: 3.1.6
 * 
 */
@WebService(targetNamespace = "http://ws.com.br/", name = "public")
@XmlSeeAlso({ObjectFactory.class})
public interface Public {

    @WebMethod
    @RequestWrapper(localName = "createFolder", targetNamespace = "http://ws.com.br/", className = "br.com.ws.CreateFolder")
    @ResponseWrapper(localName = "createFolderResponse", targetNamespace = "http://ws.com.br/", className = "br.com.ws.CreateFolderResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String createFolder(
        @WebParam(name = "token", targetNamespace = "")
        java.lang.String token,
        @WebParam(name = "folderSequenceTree", targetNamespace = "")
        java.lang.String folderSequenceTree,
        @WebParam(name = "user", targetNamespace = "")
        java.lang.String user,
        @WebParam(name = "password", targetNamespace = "")
        java.lang.String password
    );

    @WebMethod
    @RequestWrapper(localName = "findFilesFullText", targetNamespace = "http://ws.com.br/", className = "br.com.ws.FindFilesFullText")
    @ResponseWrapper(localName = "findFilesFullTextResponse", targetNamespace = "http://ws.com.br/", className = "br.com.ws.FindFilesFullTextResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<br.com.ws.FileAndFolderResult> findFilesFullText(
        @WebParam(name = "token", targetNamespace = "")
        java.lang.String token,
        @WebParam(name = "folderSequenceTree", targetNamespace = "")
        java.lang.String folderSequenceTree,
        @WebParam(name = "textConstens", targetNamespace = "")
        java.lang.String textConstens,
        @WebParam(name = "user", targetNamespace = "")
        java.lang.String user,
        @WebParam(name = "password", targetNamespace = "")
        java.lang.String password
    ) throws Exception_Exception;

    @WebMethod
    @RequestWrapper(localName = "findFilesAndFolder", targetNamespace = "http://ws.com.br/", className = "br.com.ws.FindFilesAndFolder")
    @ResponseWrapper(localName = "findFilesAndFolderResponse", targetNamespace = "http://ws.com.br/", className = "br.com.ws.FindFilesAndFolderResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<br.com.ws.FileAndFolderResult> findFilesAndFolder(
        @WebParam(name = "token", targetNamespace = "")
        java.lang.String token,
        @WebParam(name = "folderSequenceTree", targetNamespace = "")
        java.lang.String folderSequenceTree,
        @WebParam(name = "listExtesionBlock", targetNamespace = "")
        java.lang.String listExtesionBlock,
        @WebParam(name = "file", targetNamespace = "")
        boolean file,
        @WebParam(name = "folder", targetNamespace = "")
        boolean folder,
        @WebParam(name = "user", targetNamespace = "")
        java.lang.String user,
        @WebParam(name = "password", targetNamespace = "")
        java.lang.String password
    ) throws Exception_Exception;

    @WebMethod
    @RequestWrapper(localName = "uploadFileFromByte", targetNamespace = "http://ws.com.br/", className = "br.com.ws.UploadFileFromByte")
    @ResponseWrapper(localName = "uploadFileFromByteResponse", targetNamespace = "http://ws.com.br/", className = "br.com.ws.UploadFileFromByteResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String uploadFileFromByte(
        @WebParam(name = "token", targetNamespace = "")
        java.lang.String token,
        @WebParam(name = "folderSequenceTree", targetNamespace = "")
        java.lang.String folderSequenceTree,
        @WebParam(name = "name", targetNamespace = "")
        java.lang.String name,
        @WebParam(name = "data", targetNamespace = "")
        byte[] data,
        @WebParam(name = "newSpace", targetNamespace = "")
        boolean newSpace,
        @WebParam(name = "user", targetNamespace = "")
        java.lang.String user,
        @WebParam(name = "password", targetNamespace = "")
        java.lang.String password
    );

    @WebMethod
    @RequestWrapper(localName = "removeFileFromName", targetNamespace = "http://ws.com.br/", className = "br.com.ws.RemoveFileFromName")
    @ResponseWrapper(localName = "removeFileFromNameResponse", targetNamespace = "http://ws.com.br/", className = "br.com.ws.RemoveFileFromNameResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String removeFileFromName(
        @WebParam(name = "token", targetNamespace = "")
        java.lang.String token,
        @WebParam(name = "folderSequenceTree", targetNamespace = "")
        java.lang.String folderSequenceTree,
        @WebParam(name = "name", targetNamespace = "")
        java.lang.String name,
        @WebParam(name = "user", targetNamespace = "")
        java.lang.String user,
        @WebParam(name = "password", targetNamespace = "")
        java.lang.String password
    );

    @WebMethod
    @RequestWrapper(localName = "removeFolderFromName", targetNamespace = "http://ws.com.br/", className = "br.com.ws.RemoveFolderFromName")
    @ResponseWrapper(localName = "removeFolderFromNameResponse", targetNamespace = "http://ws.com.br/", className = "br.com.ws.RemoveFolderFromNameResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String removeFolderFromName(
        @WebParam(name = "token", targetNamespace = "")
        java.lang.String token,
        @WebParam(name = "folderSequenceTree", targetNamespace = "")
        java.lang.String folderSequenceTree,
        @WebParam(name = "user", targetNamespace = "")
        java.lang.String user,
        @WebParam(name = "password", targetNamespace = "")
        java.lang.String password
    );

    @WebMethod
    @RequestWrapper(localName = "uploadFileWithAspectFromByte", targetNamespace = "http://ws.com.br/", className = "br.com.ws.UploadFileWithAspectFromByte")
    @ResponseWrapper(localName = "uploadFileWithAspectFromByteResponse", targetNamespace = "http://ws.com.br/", className = "br.com.ws.UploadFileWithAspectFromByteResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String uploadFileWithAspectFromByte(
        @WebParam(name = "token", targetNamespace = "")
        java.lang.String token,
        @WebParam(name = "folderSequenceTree", targetNamespace = "")
        java.lang.String folderSequenceTree,
        @WebParam(name = "name", targetNamespace = "")
        java.lang.String name,
        @WebParam(name = "aspectName", targetNamespace = "")
        java.lang.String aspectName,
        @WebParam(name = "aspectDomain", targetNamespace = "")
        java.lang.String aspectDomain,
        @WebParam(name = "aspectKeys", targetNamespace = "")
        java.lang.String aspectKeys,
        @WebParam(name = "aspectValues", targetNamespace = "")
        java.lang.String aspectValues,
        @WebParam(name = "data", targetNamespace = "")
        byte[] data,
        @WebParam(name = "newSpace", targetNamespace = "")
        boolean newSpace,
        @WebParam(name = "user", targetNamespace = "")
        java.lang.String user,
        @WebParam(name = "password", targetNamespace = "")
        java.lang.String password
    );
}
